1)docker run in28min/todo-rest-api-h2:1.0.0.RELEASE

docker'i run etmek ucun emr'dir. run'dan sonra image adidir.Ise duse ise image'in container'dir.

********************************************************************************************************************************
2)docker run (port acmaq ucun) -p 5000(local):5000(docker) in28min/todo-rest-api-h2:1.0.0.RELEASE(image name)

********************************************************************************************************************************

3)docker run -p -d 5000:5000 in28min/todo-rest-api-h2:1.0.0.RELEASE
 Burdaki -d app'i arxa planda ise salmaga komek edir
********************************************************************************************************************************
 
4)docker logs 04e52ff9270f5810eefe1f77222852dc1461c22440d4ecd6228b5c38f09d838e(container id)
 
 Bu kod isleyen container'in logun gosterir. Hemicinin siz ilk 3-4 simvoulda vere bilersiz
( docker logs c2ba)

********************************************************************************************************************************

5)docker logs -f c2ba(container id)
Bu emr ise size canli logu verir.Yeni nese olsa terminalda eks olunur
********************************************************************************************************************************
6)docker container ls
Isleyen container'leri siraliyir.
********************************************************************************************************************************

7)docker images
Butun image'leri siraliyir local masinimda olan
********************************************************************************************************************************

8)docker container ls -a
Isleyen dayanan butun containerleri sirlayir
********************************************************************************************************************************

9)docker container stop f708b7ee1a8b(elave id yazmaq olar) 
Container'i stop edir
********************************************************************************************************************************

/////// Docker Deamon Image ve Container'leri manage edir.Misal Image varsa run edir yoxdusa registry'den download edir.Hemcinin image create etmek istesez buraxilan emrleri yene Deamon basa dusur ve Image yaradir.....(Emrler Clientden Deamon'a gonderilir)

********************************************************************************************************************************

10) docker tag in28min/todo-rest-api-h2:1.0.0.RELEASE  in28min/todo-rest-api-h2:latest   ---> Tag name'i change etmek ucun istifade olunur.Bu zaman image id sabit qalir yeni deyismir

********************************************************************************************************************************

11)docker pull mysql---> registry'den mysql'i pull edir. Ve eger sen version qeyd etmesen onda latest version pull edir
********************************************************************************************************************************
12)docker search mysql ---> bu emr registry'de mysql'leri axtarir.Siz axtarise esasan offical mysql ve s tapa bilersiz

********************************************************************************************************************************

13) docker image history in28min/hello-world-java:0.0.1.RELEASE
Bu emr image create olunanda istifade olunan addimlari bize gosterir.Tekce emr deyil diger melumnatlarda var.Beleki docker image eslinde linux uzerinde create olunur ve o create olunanda path ve s config etmek lazimdi.Amma Docker bunu auto edir.

********************************************************************************************************************************


14)docker image inspect 100229ba687e
Siz bu kodla image'i inceliye bilirsiz.Beleki loglarda siz bir image'in nece dene tag olmasini enivorment'in ne oldugunu ve s kimi melumatlar olan log gorursuz
********************************************************************************************************************************


15)docker image remove mysql  (docker rm remove image_id)
Image'i localdan silir
********************************************************************************************************************************


16)docker container run -p -d 5000:5000 in28min/todo-rest-api-h2:0.0.1-SNAPSHOT eslinde burda deyirik ki bu adda image var ve sen bu imageden bir container yarat ve 5000 de  run et ve detach mod olsun...
********************************************************************************************************************************


17)docker container pause 832
Bu emr sizin appinizi pause edir amma dayandirmir.Sanki video pause edirsen amma tamamile cixmirsan.Yeni pause olan container hele de ayaqdadir.

********************************************************************************************************************************


18)docker container unpause 832
Pause olanun container'i yeniden davam etdirir.Pause'u unpause edir

********************************************************************************************************************************



19)docker container inspect ff521fa58db3
 Imageden elave container'i da inspect(incelemek) etmek olur
 
 ********************************************************************************************************************************
 
 20)docker container prune
Stop olan butun container'leri silir

********************************************************************************************************************************

21)docker container stop 832 
Bu emr app'i duzgun formada baglayir.Mesele ExecutorService Hibernati baglayir Connection'u baglayir ve s sonra app'i baglayir
Yeni stop olmasi ucun 10 san vaxt ayirir

********************************************************************************************************************************

22)docker container kill 832
Bu emr ise umumiyyetle vaxt ayirmir.Derhal app'i stop edir.(Meslehet gorulen docker stop'dur)

********************************************************************************************************************************


23)docker run -p -d 5000:5000 --restart=always in28min/todo-rest-api-h2:0.0.1-SNAPSHOT #automatically  starts after docker desktop is restarted

Restart always docker restart edende ve ya baslayanda ve ya app'da xeta olanda container yeniden run olunur.Meselen docker stop edirem.
Container stop olur.Siz docker desktop'u yeniden basladanda ise container'de run olur.Yeni Docker baxir restart always ooan varmi?Varsa onlari run ele.Bunu qapatmaq ucun evvelce container'i stop edirik.Sonra prune deyib silirik.Belece restart always olmayan container olmadigina gore docker yeniden run olanda container run olmur

********************************************************************************************************************************


24)docker system events
container silinende ve ya create olunanda loglarda ne bas verdiyini gosterir

********************************************************************************************************************************

25)docker top 9009722eac4d
Isleyen container'de  emeliyyatlari (prossesi)size teqdim edir

********************************************************************************************************************************

26)docker stats  container_id 
Bu emr isleyen container ile elaqedar butun melumatlari bize verir.CPU RAM ve s kimi melumatlar.

********************************************************************************************************************************

27)docker stats ise isleyen butun container ile elaqedar melumatlari bize verir

********************************************************************************************************************************


28)docker container run -p 5000:5000 -d -m 512m in28min/todo-rest-api-h2:0.0.1-SNAPSHOT
Container isleyerken bu ram limiti daxilinde isleyecek.Serhed 512m(MAX) olacaq

********************************************************************************************************************************


29)docker container run -p 5000:5000 -d -m 512m --cpu-quota=50000  in28min/todo-rest-api-h2:0.0.1-SNAPSHOT
Bu kod ise RAM ile elave CPU serheddini mueyyen edir 100 000--->100% demekdir.

********************************************************************************************************************************

30)docker system df
Bu kod ile nece image var nece container necesi active'dir ve s kimi melumatlar almaq olar.Docker deamon'nun idare etdiyi resuslara baxamaga imkan verir
********************************************************************************************************************************

31)docker system info
Bu da system melumatlari veren emrdir
********************************************************************************************************************************
********************************************************************************************************************************
********************************************************************************************************************************



Distributed Tracing nedir?

4-5 ms ola biler. Onlar arasinda request  izlemek ucun xetanin harda bas verdyini oyrenmek ucun Zipkin istifade olunur.Butun ms'ler sorgularini Distributed Tracing'e(Zipkin'e) gonderir ve bu sorgular database'de saxlanilir....Zipkin Distributed Tracing sistemidir


32)docker run -p 9411:9411 openzipkin/zipkin:2.23
#Zipkin run edir



/////Opentelemetry ile Tracing arasdir!!!!!



///Micrometr her sorguya bir ID verir

