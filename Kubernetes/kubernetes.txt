1)Google Cloudda  Clusterime connect olmaq ucun connect deyilen bir button'a click edirik.Sonra size bir command verir.Hemin command'i Google Cloud Shall'de yaziriq.

*************************************************************************************************************************************

2)kubectl cluster ile elaqe yaratmaga komek eden kuberenetes emr'dir.Google Cloud'da K8S onsuz yukudur.Ve siz k8S emri ucun kubectl
emri buraxirsiz.
*************************************************************************************************************************************

3)kubectl create deployment hello-world-rest-api(sadece service name) --image=in28min/hello-world-rest-api:0.0.1.RELEASE(Docker Hub'dan download olacaq image)
Biz sadece image'i deploy etdik ve k8s hemin image bir deploymen_id verdi.indi ise biz bu app'i xarice acmaliyiq

(Clustere deploy olunur.)
*************************************************************************************************************************************
4)kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080
LoadBalancer ile 8080 portunda xarice acir
*************************************************************************************************************************************

Google Cloud Platformda isleyen servicelere baxa bilerik.
Bize bir port verir.Hemcinin statusu ve type'i gosterir


32.12.123.12:8080/hello-world deye bilerik artiq.

*************************************************************************************************************************************
5)kubectl get pods
kubectl get replicaset
kubectl get deployment
kubectl get service 


pods ve s get olunur
*************************************************************************************************************************************


POD-------------------(Container pod'da isleyir)

Container'lar pod'da isleyir.Bir pod'da 1 contaniner olmaidi. Amma coxda ola biler.Pod en kicik elementdir deye bilerik

6)kubectl get pods -o wide
Podlar haqqinda melumat verir.IP nomresi ve s. 1/1 NOMINETED NODE melumati olur.Yeni nece pod var ve necesi hazirdi.Bir podda coxlu container ola biler.Ve onlar bir biri ile elaqe saxlaya biler

*************************************************************************************************************************************

7)kubectl explain pods
Pod'un ne oldugu haqqda melumar verir.
*************************************************************************************************************************************

8)kubectl get pods----podlar qaytarilir ve podun ID'si olur. SOnra kubectl describe pod hello-world-rest-api-58ff5dd898-9trh2 emri buraxilir ve pod haqqinda etrafli melumat almaq olur
*************************************************************************************************************************************

*************************************************************************************************************************************
*************************************************************************************************************************************
*************************************************************************************************************************************

REPLICASET-----------------(pod sayini manage edir)


9)kubectl get replicasets
kubectl get replicaset
kubectl get rs---> 3 emrde eyni isi gorur.Replicaset qaytarir


Replicaset n(1,2,3,4) sayda pod'un  islemesini temin edir.Get replciaset edende desired yazilan hisse mehz bunu qeyd edir.1 yazilibsa demeli 1 pod ola biler



kubectl delete pod hello-world-rest-api-58ff5dd898-62l9d----> pod'u  oldurur.Amma replicasetde helede 1 podun islediyini gosterir.Cunki pod olen kimi replicaset avtomatic pod create edir.Hemin podun Yeni IP addressi olur

*************************************************************************************************************************************
10)kubectl scale deployment hello-world-rest-api --replicas=3
 replicasetde 3 dene pod olmasini isteyirsemse buraxdigim emr
 Hemcinin loadBalancer avtomatik her sorgunu ayri pod'a gonderir
 
*************************************************************************************************************************************
 
 11)kubectl get events --sort.by=.metadata.creationTimestamp
Zamana gore bas veren emeliyyatlari sort edir
*************************************************************************************************************************************



DEPLOYMENT-----------Downtime problemini aradan qaldirir.Siz yeni app'i update eden zaman yeni v1 version'i v2 ile evez eden zaman downtime yaranmir


*************************************************************************************************************************************

12)kubectl set image deployment hello-world-rest-api(deployment name) hello-world-rest-api(container_name)=DUMMY_IMAGE:TEST

Bu yanlis deployment'dir.Amma yanlis olsa bele kohne deployment helede up'dir

*************************************************************************************************************************************

13)kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.2.RELEASE
Artiq evvelki podlar terminated olur.Sanki kohne image'i yenisi ile evez etdin.Her sey evvelki configde qalir.Meselen pod olur.

*************************************************************************************************************************************
*************************************************************************************************************************************




SERVICES----------------------Podlarin IP nomreleri olur.Her defesinde pod silinende yeni IP adresi create olunur.Her defe Consumer'e yeni url vermek duzgun olmaz.Sadace bir url olur. Ve siz podlar silinse bele hemin url deyismir.Bunu K8S'de Service deyilen unit edir.
Qisaca Servcisin rolu podun icinde isleyen app'a hemise istifade oluna bilen bir interface temin etmekdir.Service App deploy olunanda create  olunur


14)kubectl get componentstatuses----> deyende master node'da olan unit'lerin veziyyetini qaytarir

*************************************************************************************************************************************


////////////////////

DOCKER LOGIN
docker login

Docker image'i Docker Hub'a puslamaq ucun command
docker push in28min/mmv3-currency-exchange-service:0.0.11-SNAPSHOT
docker push in28min/mmv3-currency-conversion-service:0.0.11-SNAPSHOT


15)
kubectl create deployment currency-exchange --image=in28min/mmv3-currency-exchange-service:0.0.11-SNAPSHOT
(Image create olunur)
kubectl expose deployment currency-exchange --type=LoadBalancer --port=8000
(Ve port acilir)


16)kubectl get svc (services yazmaq olar)
Servicler qaytairir

(Qisaltmalar)

kubectl get pods
kubectl get po
kubectl get replicaset
kubectl get rs


17)kubectl get all
ise butun unit'leri verir.Pod rs deployment svc






18)kubectl get deployments
Bize deploymentleri verir.Yaml formasinda isteyirikse  kubectl get deployment (deployment_name) -o yaml deyirik


kubectl get deployment (deployment_name) -o yaml >> deployment.yaml deyende hemin yaml datasini deployment.yaml fayli kimi saxlayir


19)kubectl diff -f deployment.yaml
Fayldaki ferqlilikleri gosterir


20)kubectl apply -f deployment.yaml
Oz deyisikliklerimi apply edirem.K8S bu deyisikliklere gore bezi deyisiklikler edir.Meselen 2 pod ayaga qaldirir ve s


21)kubectl delete all -l app=currency-exchange
kubectl delete all -l app=currency-conversion

Deploymentleri silir(Pod service depoyment her seyi)


21)kubectl apply -f deployment.yaml
Bu emr hemcinin dployment create edir amma sizin hazir configler ile


22)kubectl logs (pod_name)
 App'in loglarini verir
 
 
 23)kubectl create configmap currency-conversion(name) --from-literal=CURRENCY_EXCHANGE_URI=http://currency-exchange
K8S bize merkezi config teqdim edir.Misal ucun cuurency-conversion ucun merkezi configurasiya etmek ucun istifade ede bilerik.ENV create edirik ve bunun degeri currency-exchange url'i olur

24)kubectl get configmap
Configmap qaytarir


25)kubectl get configmap currency-conversion -o yaml >> configmap.yaml
Yaml formatinda almaq ucun ve save etmek ucun



26)kubectl rollout history deployment currency-exchange
Deploymentleti gosterir

27)kubectl rollout undo deployment currency-exchange --to-revision=1
Eger depoyment 2 islemirse xetalidisa 1e geri donus etmek olur



28)kubectl autoscale deployment currency-exchange --min=1 --max=3 --cpu-percent=5 
CPUda artiq yukelnme varsa podu artirir yoxdusa 1 de saxlayir bunlar avtomatik olur


29)kubectl get hpa
Autoscale datalarini goturmek istesem


30)kubectl top pod
kubectl top nodes

Podlarin cpu memory ve s kimi xeclerin gosterir



31)kubectl delete hpa currency-exchange
autoscale silir
